// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: proto/meeting/space.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "context"
	api "github.com/micro/go-micro/v2/api"
	client "github.com/micro/go-micro/v2/client"
	server "github.com/micro/go-micro/v2/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ api.Endpoint
var _ context.Context
var _ client.Option
var _ server.Option

// Api Endpoints for SpaceService service

func NewSpaceServiceEndpoints() []*api.Endpoint {
	return []*api.Endpoint{}
}

// Client API for SpaceService service

type SpaceService interface {
	//查询所有地点列表
	GetAllSpaces(ctx context.Context, in *ReqGetAllSpaces, opts ...client.CallOption) (*Response, error)
	//查询地点列表
	GetSpaces(ctx context.Context, in *ReqGetSpaces, opts ...client.CallOption) (*Response, error)
	//查询地点详情
	GetSpace(ctx context.Context, in *ReqGetSpace, opts ...client.CallOption) (*Response, error)
	//新增地点
	CreateSpace(ctx context.Context, in *ReqCreateSpace, opts ...client.CallOption) (*Response, error)
	//编辑地点
	UpdateSpace(ctx context.Context, in *ReqUpdateSpace, opts ...client.CallOption) (*Response, error)
	//删除地点
	DelSpace(ctx context.Context, in *ReqDelSpace, opts ...client.CallOption) (*Response, error)
	//启用/禁用地点
	UpdateSpaceStatus(ctx context.Context, in *ReqUpdateSpaceStatus, opts ...client.CallOption) (*Response, error)
}

type spaceService struct {
	c    client.Client
	name string
}

func NewSpaceService(name string, c client.Client) SpaceService {
	return &spaceService{
		c:    c,
		name: name,
	}
}

func (c *spaceService) GetAllSpaces(ctx context.Context, in *ReqGetAllSpaces, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "SpaceService.GetAllSpaces", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceService) GetSpaces(ctx context.Context, in *ReqGetSpaces, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "SpaceService.GetSpaces", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceService) GetSpace(ctx context.Context, in *ReqGetSpace, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "SpaceService.GetSpace", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceService) CreateSpace(ctx context.Context, in *ReqCreateSpace, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "SpaceService.CreateSpace", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceService) UpdateSpace(ctx context.Context, in *ReqUpdateSpace, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "SpaceService.UpdateSpace", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceService) DelSpace(ctx context.Context, in *ReqDelSpace, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "SpaceService.DelSpace", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceService) UpdateSpaceStatus(ctx context.Context, in *ReqUpdateSpaceStatus, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "SpaceService.UpdateSpaceStatus", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for SpaceService service

type SpaceServiceHandler interface {
	//查询所有地点列表
	GetAllSpaces(context.Context, *ReqGetAllSpaces, *Response) error
	//查询地点列表
	GetSpaces(context.Context, *ReqGetSpaces, *Response) error
	//查询地点详情
	GetSpace(context.Context, *ReqGetSpace, *Response) error
	//新增地点
	CreateSpace(context.Context, *ReqCreateSpace, *Response) error
	//编辑地点
	UpdateSpace(context.Context, *ReqUpdateSpace, *Response) error
	//删除地点
	DelSpace(context.Context, *ReqDelSpace, *Response) error
	//启用/禁用地点
	UpdateSpaceStatus(context.Context, *ReqUpdateSpaceStatus, *Response) error
}

func RegisterSpaceServiceHandler(s server.Server, hdlr SpaceServiceHandler, opts ...server.HandlerOption) error {
	type spaceService interface {
		GetAllSpaces(ctx context.Context, in *ReqGetAllSpaces, out *Response) error
		GetSpaces(ctx context.Context, in *ReqGetSpaces, out *Response) error
		GetSpace(ctx context.Context, in *ReqGetSpace, out *Response) error
		CreateSpace(ctx context.Context, in *ReqCreateSpace, out *Response) error
		UpdateSpace(ctx context.Context, in *ReqUpdateSpace, out *Response) error
		DelSpace(ctx context.Context, in *ReqDelSpace, out *Response) error
		UpdateSpaceStatus(ctx context.Context, in *ReqUpdateSpaceStatus, out *Response) error
	}
	type SpaceService struct {
		spaceService
	}
	h := &spaceServiceHandler{hdlr}
	return s.Handle(s.NewHandler(&SpaceService{h}, opts...))
}

type spaceServiceHandler struct {
	SpaceServiceHandler
}

func (h *spaceServiceHandler) GetAllSpaces(ctx context.Context, in *ReqGetAllSpaces, out *Response) error {
	return h.SpaceServiceHandler.GetAllSpaces(ctx, in, out)
}

func (h *spaceServiceHandler) GetSpaces(ctx context.Context, in *ReqGetSpaces, out *Response) error {
	return h.SpaceServiceHandler.GetSpaces(ctx, in, out)
}

func (h *spaceServiceHandler) GetSpace(ctx context.Context, in *ReqGetSpace, out *Response) error {
	return h.SpaceServiceHandler.GetSpace(ctx, in, out)
}

func (h *spaceServiceHandler) CreateSpace(ctx context.Context, in *ReqCreateSpace, out *Response) error {
	return h.SpaceServiceHandler.CreateSpace(ctx, in, out)
}

func (h *spaceServiceHandler) UpdateSpace(ctx context.Context, in *ReqUpdateSpace, out *Response) error {
	return h.SpaceServiceHandler.UpdateSpace(ctx, in, out)
}

func (h *spaceServiceHandler) DelSpace(ctx context.Context, in *ReqDelSpace, out *Response) error {
	return h.SpaceServiceHandler.DelSpace(ctx, in, out)
}

func (h *spaceServiceHandler) UpdateSpaceStatus(ctx context.Context, in *ReqUpdateSpaceStatus, out *Response) error {
	return h.SpaceServiceHandler.UpdateSpaceStatus(ctx, in, out)
}
